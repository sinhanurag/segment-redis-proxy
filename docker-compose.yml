# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)

version: '3.7'

services:
  # Redis Proxy service
  proxy-service:
    # Configuration for building the docker image for the redis proxy service
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - ${PROXY_PORT}:${PROXY_PORT} # Forward the exposed port 8080 on the container to port 8080 on the host machine

    command: -Dexec.args="--REDIS_HOST=redis --REDIS_PORT=${REDIS_PORT} --GLOBAL_EXPIRY=${GLOBAL_EXPIRY} --CACHE_SIZE=${CACHE_SIZE} --PROXY_PORT=${PROXY_PORT}"
    depends_on:
      - redis # This service depends on Redis. Start that first.

    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - common

  # Redis service
  redis:
    image: naviter/redis-6.0.4-alpine
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    command: --port ${REDIS_PORT}
    networks:
      - common

  e2e-tests:
    build:
      context: e2e-tests
      dockerfile: Dockerfile
    depends_on:
      - redis
      - proxy-service
    command: -DREDIS_HOST=redis -DREDIS_PORT=${REDIS_PORT} -DPROXY_HOST=proxy-service -DPROXY_PORT=${PROXY_PORT} -DGLOBAL_EXPIRY=${GLOBAL_EXPIRY} -DCACHE_SIZE=${CACHE_SIZE}

    networks:
      - common

## Networks to be created to facilitate communication between containers
networks:
  common:
